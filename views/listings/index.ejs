<% layout("/layouts/basic") -%>
   
    <style>
      #filters{
        display: flex;
        flex-wrap: wrap;
        align-items: center;
      }
      .filter {
        text-align: center;
        margin-right: 2rem;
        margin-top: 2rem;
        opacity: 0.7;
      }

      .filter:hover {
        opacity: 1;
        cursor: pointer;
      }
      .filter p {
          font-size: 0.8rem;
      }

      .tax-info {
        display: none;
      }

      .tax-toggle {
        border: 1px solid black;
        border-radius : 1rem;
        height: 2.5rem;
        padding:1rem;
        display: flex;
        align-items: center;
        margin-left: 2rem;
      }

      

      </style>
    <div id="filters"> 
      <div class="filter" data-category="Trending">
        <div> <i class="fa-solid fa-fire"></i>
        </div>  <p>Trending</p>
      </div>

      <div class="filter"  data-category="Rooms">
        <div> <i class="fa-solid fa-house"></i>
        </div>  <p>Rooms</p>
      </div>

      <div class="filter"  data-category="Icomic Cities">
        <div> <i class="fa-solid fa-mountain-city"></i>
        </div>  <p>Iconic Cities</p>
      </div>

      <div class="filter"  data-category="Mountain">
        <div> <i class="fa-solid fa-mountain"></i>
        </div>  <p>Mountain</p>
      </div>

      <div class="filter"  data-category="castles">
        <div> <i class="fa-brands fa-fort-awesome"></i>
        </div>  <p>castles</p>
      </div>

      <div class="filter"  data-category="Amazing Pool">
        <div> <i class="fa-solid fa-person-swimming"></i>
        </div>  <p>Amazing Pool</p>
      </div>

      <div class="filter"  data-category="Camping">
        <div> <i class="fa-solid fa-campground"></i>
        </div>  <p>Camping</p>
      </div>

      <div class="filter"  data-category="Farms">
        <div> <i class="fa-solid fa-cow"></i>
        </div>  <p>Farms</p>
      </div>

      <div class="filter"  data-category="Arctic">
        <div> <i class="fa-solid fa-snowflake"></i>
        </div>  <p>Arctic</p>
      </div>

      <div class="filter"  data-category="Domes">
        <div> <i class="fa-solid fa-igloo"></i>
        </div>  <p>Domes</p>
      </div>

      <div class="filter"  data-category="Boats">
        <div> <i class="fa-solid fa-ship"></i>
        </div>  <p>Boats</p>
      </div>




    <div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3" >
    <% for(let listing of allListings) { %>
      <a href="/listings/<%= listing._id %>" class="listing-link">
    <div class="card col listing-card" data-location="<%= listing.location %>" data-price="<%= listing.price %>" >
        <img src="<%= listing.image.url %>" class="card-img-top" alt="listing.title" style="height:20rem; width: 20rem;">
        <div class="card-img-overlay"> Wellcome To New Journey</div>
        <div class="card-body">
          
          <!-- <h5 class="card-title">Card title</h5> -->
          <p class="card-text"> <br> 
             <b> <%= listing.title %> </b> <br>
             <%= listing.location %> <br>
         <br> 
         &nbsp; <%= listing.price.toLocaleString("en-IN") %>
          
         <i class="tax-info"> &nbsp; &nbsp; +18% GST</i><!-- <a href="#" class="btn btn-primary">Go somewhere</a> -->
          </p>
        </div>
      </div>
      <% } %>
      </div>
    </a>
        
    
    
<script>
  let taxSwitch = document.getElementById("flexSwitchCheckDefault");
   taxSwitch.addEventListener("click", () => {
    let  taxInfo = document.getElementsByClassName("tax-info");
     for(info of taxInfo){
      if(info.style.display != "inline"){
      info.style.display = "inline";
     }else {
      info.style.display = "none";
     }
    }
   });




   document.addEventListener("DOMContentLoaded", function () {
  let allListings = Array.from(document.querySelectorAll(".listing-card"));
  let filters = document.querySelectorAll(".filter");

  // Add click event listeners to each filter icon
  filters.forEach((filter) => {
    filter.addEventListener("click", () => {
      let category = filter.getAttribute("data-category");

      // Filter listings based on category
      allListings.forEach((listing) => {
        let listingCategory = listing.querySelector(".card-body .card-text b").textContent.toLowerCase();

        // Check if the listing title or location matches the selected category
        if (listingCategory.includes(category.toLowerCase())) {
          listing.style.display = "block"; // Show the listing
        } else {
          listing.style.display = "none"; // Hide the listing
        }
      });
    });
  });
});
  // Other filter functionality (e.g., by price, location, etc.) can go here


   
  document.addEventListener("DOMContentLoaded", function () {
    // Get all listings
    let allListings = Array.from(document.querySelectorAll(".listing-card"));

    function filterListings(event) {
      event.preventDefault(); // Prevent form submission

      const searchQuery = document.getElementById("searchInput").value.toLowerCase().trim();
      const isNumber = !isNaN(searchQuery) && searchQuery !== "";

      let anyVisible = false;

      allListings.forEach((listing) => {
        const title = listing.querySelector(".card-body .card-text b").textContent.toLowerCase();
        const location = listing.dataset.location ? listing.dataset.location.toLowerCase() : "";
        const price = listing.dataset.price ? parseInt(listing.dataset.price) : null;

        const matchesTitle = title.includes(searchQuery);
        const matchesLocation = location.includes(searchQuery);
        const matchesPrice = isNumber ? price <= parseInt(searchQuery) : false;

        if (matchesTitle || matchesLocation || matchesPrice) {
          listing.style.display = "block"; // Show the listing
          anyVisible = true;
        } else {
          listing.style.display = "none"; // Hide the listing
        }
      });

      // Show a "No Listings Found" message if nothing matches
      let noResultsMessage = document.getElementById("noResultsMessage");

      if (!anyVisible) {
        if (!noResultsMessage) {
          noResultsMessage = document.createElement("h4");
          noResultsMessage.id = "noResultsMessage";
          noResultsMessage.classList.add("text-center", "mt-3");
          noResultsMessage.textContent = "No listings found";
          document.querySelector(".row").appendChild(noResultsMessage);
        }
      } else if (noResultsMessage) {
        noResultsMessage.remove(); // Remove "No Listings Found" message if results exist
      }
    }

    // Attach event listener to search button
    document.querySelector(".search-btn").addEventListener("click", filterListings);
  });

</script>
